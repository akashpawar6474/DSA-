class Solution:
    def countBattleships(self, board: List[List[str]]) -> int:
        """
        by doing some observations we can solve this problem
        fact that Battleships can only be placed top=> down OR left => right
        we can use this fact as we are grazing top down and left right
        what we can do it whenever we will encounter X then we will see if this is starting point of battleships
        Q.how we will get to know if this is starting point
        => this should contain x
            if this is first row or top cell is empty
            if this is first col or left cell is empty
            then inc the count
            
        constant space and linear time
        """
        count = 0
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == "X":
                    if (i == 0 or board[i - 1][j] == ".") and (j == 0 or board[i][j - 1] == "."):
                        count += 1
        return count
    
    def bruteforce(self,board):
        """
        idea is very simple like finding number of islands
        by doing simple dfs with visited set
        tc = O(n * m)
        sc = O(max(n,m))
        """
        def dfs(i,j,visited,board):
            visited.add((i,j))
            for newx,newy in [(i + 1,j),(i - 1,j),(i,j + 1),(i,j - 1)]:
                if 0 <= newx < len(board) and 0 <= newy < len(board[0]) and (newx,newy) not in visited and board[newx][newy] == "X":
                    dfs(newx,newy,visited,board)
        
        visited = set()
        count = 0
        for i in range(len(board)):
            for j in range(len(board[0])):
                if (i,j) not in visited and board[i][j] == "X":
                    dfs(i,j,visited,board)
                    count += 1
        return count
                    
