Problem Description

Given three integers A, B and C, where A represents n, B represents r and C represents m, find and return the value of nCr % m where nCr % m = (n!/((n-r)!*r!))% m.

x! means factorial of x i.e. x! = 1 * 2 * 3... * x.



Problem Constraints

1 <= A * B <= 106

1 <= B <= A

1 <= C <= 106



Input Format

The first argument given is integer A ( = n).
The second argument given is integer B ( = r).
The third argument given is integer C ( = m).


Output Format

Return the value of nCr % m.



Example Input

Input 1:

 A = 5
 B = 2
 C = 13
Input 2:

 A = 6
 B = 2
 C = 13


Example Output

Output 1:

 10
Output 2:

 2
 -----------------------------------------------------
 class Solution:
    # @param A : integer
    # @param B : integer
    # @param C : integer
    # @return an integer
    def solve(self, A, B, C):
        """
        brute force is construct the table
        using the formula

        nCr = (n - 1)C(r - 1) + (n - 1)Cr

        for eg. 2C2 = 1C1 + 1C0
        mat[2][1] =  mat[1][1] + mat[1][0]

        edge cases => we can select r from n ele if r > nCr
                        means select 2 from 1 ele => 0 ways
                    
                    we can select 0 items from any items using only 1 ways
                    nc0 = 1

        tc = O(n * r)
        sc = O(n * r)
        """
        dp = [[0 for y in range(B + 1)]for x in range(A + 1)]

        for i in range(A + 1):
            dp[i][0] = 1
        
        for i in range(1,A + 1):
            for j in range(1,B + 1):
                dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1]
        
        return dp[A][B] % C
