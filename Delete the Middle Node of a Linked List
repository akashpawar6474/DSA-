# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        def findMiddleNode(head):
            slowPrev = None
            slow = head
            fast = head
            while fast and fast.next:
                slowPrev = slow
                slow = slow.next
                fast = fast.next.next
            return slow,slowPrev
        if head is None or head.next is None:
            return None
        slow,slowPrev = findMiddleNode(head)
        slowPrev.next = slow.next
        return head
