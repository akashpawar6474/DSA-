class Solution:
	# @param A : integer
	# @return a list of integers
	def primesum(self, A):
        """
        brute force is generate sieve of prime no
        untill A

        then using two pointers cal pairs
        """
        sieve = [True for x in range(A + 1)]
        sieve[0] = sieve[1] = False
        currPtr = 2
        while currPtr * currPtr <= A:
            if sieve[currPtr]:
                multiple = currPtr * currPtr
                while multiple <= A:
                    if sieve[multiple]:
                        sieve[multiple] = False
                    multiple += currPtr
            currPtr += 1
        
        first = 2
        last = A
        for i in range(A,1,-1):
            if sieve[i]:
                last = i
                break
        
        while first <= last:
            if first + last == A:
                return [first,last]
            if first + last < A:
                for i in range(first + 1,A + 1):
                    if sieve[i]:
                        first = i
                        break
            else:
                for i in range(last - 1,1,-1):
                    if sieve[i]:
                        last = i
                        break
        return [-1,-1]
