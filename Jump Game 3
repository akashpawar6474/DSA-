from collections import deque
class Solution:
    def canReach(self, arr: List[int], start: int) -> bool:
        """
        as per looking at hints we will be doing bfs
        so we can move level by level
        first level is st idx initially pushed into the queue
        if nextIdxAfterJump from curr idx is within the bound then add to the queue
        tc = O(n)
        sc = O(n) for set
        """
        q = deque()
        q.append(start)
        visited = set()
        while q:
            currIdx = q.popleft()
            visited.add(currIdx)
            if arr[currIdx] == 0:
                return True
            if 0 <= currIdx + arr[currIdx] < len(arr) and currIdx + arr[currIdx] not in visited:
                q.append(currIdx + arr[currIdx])
            if 0 <= currIdx - arr[currIdx] < len(arr) and currIdx - arr[currIdx] not in visited:
                q.append(currIdx - arr[currIdx])
        return False
