class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        n = len(nums1)
        m = len(nums2)
        if m < n:
            return self.findMedianSortedArrays(nums2,nums1)
        ans = 0
        start = 0
        end = n
        while start <= end:
            cut1 = (start + end) // 2
            cut2 = ((n + m + 1) // 2) - cut1
            
            l1 = -math.inf if cut1 == 0 else nums1[cut1 - 1]
            r1 = math.inf if cut1 == n else nums1[cut1]
            l2 = -math.inf if cut2 == 0 else nums2[cut2 - 1]
            r2 = math.inf if cut2 == m else nums2[cut2]
            
            if l1 <= r2 and l2 <= r1:
                if (n + m) & 1 == 0:
                    ans = (max(l1,l2) + min(r1,r2)) / 2
                    break
                else:
                    ans = max(l1,l2)
                    break
            if l1 > r2:
                end = cut1 - 1
            else:
                start = cut1 + 1
        return ans
    def bruteForce(self,nums1,nums2):
        """
        brute force is club both arrays 
        then if length is odd
            return ele at mid idx
        else
            take addition(ele at mid + ele at next idx of mid) // 2
        tc = O(n)
        sc = O(n)
        """
        def merge(nums1,nums2):
            n = len(nums1)
            m = len(nums2)
            nums1Ptr = 0
            nums2Ptr = 0
            ans = []
            while nums1Ptr < n and nums2Ptr < m:
                if nums1[nums1Ptr] < nums2[nums2Ptr]:
                    ans.append(nums1[nums1Ptr])
                    nums1Ptr += 1
                else:
                    ans.append(nums2[nums2Ptr])
                    nums2Ptr += 1
                    
            while nums1Ptr < n:
                ans.append(nums1[nums1Ptr])
                nums1Ptr += 1
                
            while nums2Ptr < m:
                ans.append(nums2[nums2Ptr])
                nums2Ptr += 1
                
            return ans
        
        def findMedian(ans):
            n = len(ans)
            print(ans)
            mid = n // 2
            if n & 1 != 0:
                return ans[mid]
            else:
                return (ans[mid] + ans[mid - 1]) / 2
            
        ans = merge(nums1,nums2)
        return findMedian(ans)
                
