Given an integer array A of N integers, find the pair of integers in the array which have minimum XOR value. Report the minimum XOR value.



Problem Constraints

2 <= length of the array <= 100000
0 <= A[i] <= 109
----------------------------------------------
import math
class Solution:
	# @param A : list of integers
	# @return an integer
	def findMinXor(self, A):
        """
        IGNORE IGNORE
        can we make use of bits?
         A = [0, 2, 5, 7]

         0 = 0 0 0
         4 = 1 0 0
         5 = 1 0 1
         7 = 1 1 1
        -----------------count no of set and unset bits
             3 1 2 <= no of set bits
             1 3 2 <= no of unset bits

         if there is 0 in array 
         then min ele in array can be answer

          IGNORE IGNORE

         Observation Observation Observation

         xor of nearby ele is always small
         because if we take 29 and 30
                16 8 4 2 1
         29 =    1 1 1 0 1
         30 =    1 1 1 1 0
         ---------------------xor
                 0 0 0 1 1 => 3
        because most significant bits into ele's
        are nearly same for closest no which can get canceled
        in xor

        so our task is to find pair with min diff and take xor of them
        or we can just sort the array and take xor of adjcent ele's
        tc = O(nlogn)
        sc = O(n)
        """
        A.sort()
        n = len(A)
        minXor = math.inf
        for i in range(n - 1):
            currXor = A[i] ^ A[i + 1]
            minXor = min(currXor,minXor)
        return minXor

    def bruteForce(self,A):
        """
        brute force is generate all pairs
        tc = O(n ^ 2)
        sc = constant
        """
        n = len(A)
        minXor = math.inf
        for i in range(n):
            for j in range(i + 1,n):
                currXor = A[i] ^ A[j]
                minXor = min(currXor,minXor)
        return minXor
