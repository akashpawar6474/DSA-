class Solution:
    # @param A : integer
    # @param B : integer
    # @return an integer
    def solve(self, A, B):
        """
        (x ^ (B - 1)) % B = 1
        ((x ^ (B - 1)) % B) / x = 1 / x
        (A ^ (B - 2)) % B

        step1 => power fn (A,b - 2,b)
        
        for x in range(1,B):
            if ((A % B) * (x % B)) % B == 1:
                return x
        return -1
        """
        def getPower(coefficient,power,C):
            tempPower = power
            ans = 1
            while power > 0:
                if power % 2 == 0:
                    coefficient = (coefficient * coefficient) % C
                    power = power // 2
                else:
                    ans *= coefficient
                    ans = ans % C
                    power = power - 1
            
            if tempPower < 0:
                return 1 / ans
            return ans
        
        return getPower(A,B - 2,B)
