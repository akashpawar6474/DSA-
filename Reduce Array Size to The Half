import heapq
class Solution:
    def minSetSize(self, arr: List[int]) -> int:
        """
        first of all calculate the half size of an array
        then create freq table and insert frequencies into maxHeap
        then remove frequencies from maxHeap untill total cross half size
        after that return the answer
        tc = O(nlogn)
        sc = O(n)
        """
        n = len(arr)
        halfSize = n // 2
        ht = {}
        for i in range(len(arr)):
            if arr[i] not in ht:
                ht[arr[i]] = 0
            ht[arr[i]] += 1
        
        maxHeap = []
        for key,val in ht.items():
            heapq.heappush(maxHeap,-val)
        count = 0
        while maxHeap:
            topFreq = heapq.heappop(maxHeap)
            halfSize = halfSize + topFreq
            if halfSize <= 0:
                count += 1
                return count
            count += 1
        return count
