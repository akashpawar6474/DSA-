class Solution:
    def winnerOfGame(self, colors: str) -> bool:
        """
        this problem can be solved with observation
        think generally
        no of valid a => countA
        no of valid B => countB
        
        if countA > countB:
            then the point will come where bob will have no choice 
        if countA <= countB
            then point will come where Alice has no choice
        
        so idea is very simple
        just graze over array
        and count no of valid pairs for alice and bob
        then return true if countA > countB else False
        """
        countA = 0
        countB = 0
        for i in range(1,len(colors) - 1):
            if colors[i] == colors[i - 1] == colors[i + 1] == 'A':
                countA += 1
            elif colors[i] == colors[i - 1] == colors[i + 1] == 'B':
                countB += 1
        return countA > countB
                
    def firstTry(self,colors):
        """
        brute force is to do simulation
        first of all mark all pieces are not removed
        """
        isColorRemoved = [False] * len(colors)
        ifPossible = True
        isAliceTurn = True
        while ifPossible:
            if isAliceTurn:
                foundColor = False
                for i in range(1,len(colors) - 1):
                    if colors[i] == 'A':
                        leftNeighbour = i - 1
                        while leftNeighbour >= 0 and isColorRemoved[leftNeighbour]:
                            leftNeighbour -= 1
                        rightNeighbour = i + 1
                        while rightNeighbour < len(colors) and isColorRemoved[rightNeighbour]:
                            rightNeighbour += 1
                        if colors[leftNeighbour] == colors[rightNeighbour] == colors[i]:
                            isColorRemoved[i] = True
                            foundColor = True
                            break
                if not foundColor:
                    return False
            else:
                foundColor = False
                for i in range(1,len(colors) - 1):
                    if colors[i] == 'B':
                        leftNeighbour = i - 1
                        while leftNeighbour >= 0 and isColorRemoved[leftNeighbour]:
                            leftNeighbour -= 1
                        rightNeighbour = i + 1
                        while rightNeighbour < len(colors) and isColorRemoved[rightNeighbour]:
                            rightNeighbour += 1
                        if colors[leftNeighbour] == colors[rightNeighbour] == colors[i]:
                            isColorRemoved[i] = True
                            foundColor = True
                            break
                if not foundColor:
                    return True
            isAliceTurn = not isAliceTurn
        return True
