# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:
        if root is None:
            return None
        curr = root
        while curr:
            if curr.val == val:
                return curr
            elif curr.val < val:
                curr = curr.right
            else:
                curr = curr.left
        return None
    
    def recursiveApproach(self,root):
        if root is None:
            return None
        if root.val == val:
            return root
        elif root.val < val:
            return self.recursiveApproach(root.right,val)
        else:
            return self.recursiveApproach(root.left,val)
